# This is where we download, configure and build all the dependencies.
# There's not a silver bullet here: every road leads to pain.
# This is the road of least pain (with the worst metaphors).
#
# For each library, we ask it to build a static lib (where appropriate) and to
# install into the build directory.
# The advantage of this approach is that we can deal with cmake and autotools
# builds in much the same way.
# Also cmake can magically download stuff from nearly anywhere which is neat.
# The disadvantage is that we have to hard-code the names of the generated
# libraries that we want to use, which will change between platforms.
# While we target macOS alone, this isn't a problem, but it might turn into a
# problem if we target Windows at any point.

include(ExternalProject)
find_package(Git REQUIRED)

set(dependency_path ${CMAKE_BINARY_DIR}/dependencies)

# glm ##########################################################################

ExternalProject_Add(
    glm_external
    PREFIX ${CMAKE_BINARY_DIR}
    DOWNLOAD_COMMAND ${GIT_EXECUTABLE} clone --depth 1 --branch 0.9.8.1 https://github.com/g-truc/glm.git glm_external
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> 
)

# assimp #######################################################################

ExternalProject_Add(
    assimp_external
    PREFIX ${CMAKE_BINARY_DIR}
    DOWNLOAD_COMMAND ${GIT_EXECUTABLE} clone --depth 1 --branch v3.3.1 https://github.com/assimp/assimp.git assimp_external
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_STATIC_LIB=ON -DBUILD_SHARED_LIBS=OFF -DASSIMP_BUILD_ZLIB=ON
)

add_library(assimp UNKNOWN IMPORTED)
set_property(TARGET assimp PROPERTY IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/lib/libassimp.a)
add_dependencies(assimp assimp_external) 

add_library(zlibstatic UNKNOWN IMPORTED)
set_property(TARGET zlibstatic PROPERTY IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/lib/libzlibstatic.a)
add_dependencies(zlibstatic assimp_external) 

# fftw3 ########################################################################

ExternalProject_Add(
    fftw_external
    PREFIX ${CMAKE_BINARY_DIR}
    URL http://fftw.org/fftw-3.3.5.tar.gz
    CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=<INSTALL_DIR> --enable-float
)

add_library(fftwf UNKNOWN IMPORTED)
set_property(TARGET fftwf PROPERTY IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/lib/libfftw3f.a)
add_dependencies(fftwf fftw_external) 

# sndfile ######################################################################

ExternalProject_Add(
    sndfile_external
    PREFIX ${CMAKE_BINARY_DIR}
    DOWNLOAD_COMMAND ${GIT_EXECUTABLE} clone --depth 1 --branch 1.0.27 https://github.com/erikd/libsndfile.git sndfile_external
    CONFIGURE_COMMAND <SOURCE_DIR>/autogen.sh && <SOURCE_DIR>/configure --prefix=<INSTALL_DIR> --disable-external-libs
)

add_library(sndfile UNKNOWN IMPORTED)
set_property(TARGET sndfile PROPERTY IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/lib/libsndfile.a)
add_dependencies(sndfile sndfile_external) 

# samplerate ###################################################################

# The default libsamplerate distribution uses a deprecated path to Carbon, so
# we have to manually patch it to modify the path before building.

ExternalProject_Add(
    samplerate_external
    PREFIX ${CMAKE_BINARY_DIR}
    DOWNLOAD_COMMAND ${GIT_EXECUTABLE} clone --depth 1 https://github.com/erikd/libsamplerate.git samplerate_external
    PATCH_COMMAND ${GIT_EXECUTABLE} apply ${CMAKE_SOURCE_DIR}/fix_carbon.patch
    CONFIGURE_COMMAND <SOURCE_DIR>/autogen.sh && <SOURCE_DIR>/configure --prefix=<INSTALL_DIR> --disable-dependency-tracking 
)

add_library(samplerate UNKNOWN IMPORTED)
set_property(TARGET samplerate PROPERTY IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/lib/libsamplerate.a)
add_dependencies(samplerate samplerate_external) 

# gtest ########################################################################

ExternalProject_Add(
    gtest_external
    PREFIX ${CMAKE_BINARY_DIR}
    DOWNLOAD_COMMAND ${GIT_EXECUTABLE} clone --depth 1 --branch release-1.8.0 https://github.com/google/googletest.git gtest_external
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> 
)

add_library(gtest UNKNOWN IMPORTED)
set_property(TARGET gtest PROPERTY IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/lib/libgtest.a)
add_dependencies(gtest gtest_external) 

# cereal #######################################################################

ExternalProject_Add(
    cereal_external
    PREFIX ${CMAKE_BINARY_DIR}
    DOWNLOAD_COMMAND ${GIT_EXECUTABLE} clone --depth 1 --branch v1.2.1 https://github.com/USCiLab/cereal.git cereal_external
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> -DJUST_INSTALL_CEREAL=ON
)

# opencl #######################################################################

find_library(opencl_lib OpenCL)
mark_as_advanced(opencl_lib)
